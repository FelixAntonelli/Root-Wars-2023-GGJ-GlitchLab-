//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Misc/PlayerControllerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControllerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControllerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControllerActions"",
    ""maps"": [
        {
            ""name"": ""playerMovement"",
            ""id"": ""f3a4ef01-b887-4859-a6f7-ca2131a240ff"",
            ""actions"": [
                {
                    ""name"": ""Player1Movement"",
                    ""type"": ""Value"",
                    ""id"": ""0d03efdb-e56b-4499-9404-104127d29c11"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player2Movement"",
                    ""type"": ""Value"",
                    ""id"": ""53208f34-b1fb-4f7d-a9fa-89b1816a11e3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Player1Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""d40f8ff5-826f-4ad5-9895-3c77261c7a0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""4ed31515-9646-40f6-8673-dd32d5c30929"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player1Change"",
                    ""type"": ""Button"",
                    ""id"": ""1b1e82ae-88cf-42b6-b941-c92fd5699673"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2Change"",
                    ""type"": ""Button"",
                    ""id"": ""54a64a5f-8901-4f32-8d95-e23800ec18d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player1Refresh"",
                    ""type"": ""Button"",
                    ""id"": ""181955de-7a69-4c0d-abd2-ee9abc69130c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player2Refresh"",
                    ""type"": ""Button"",
                    ""id"": ""9fa3f2b0-ad65-47c1-8896-d8a3be3fd29b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Movement"",
                    ""id"": ""e50022c1-389d-4aeb-9cb9-e66858ba0636"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""99a6689f-3846-4bcf-925f-48e8dcdd102c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ca9619f4-92c5-4f86-8a56-73b2f6ba7426"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e5127e5f-5b79-4b54-a97c-6fd4aa1af827"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""78d297eb-fb5e-4025-bb2e-270a3ff017b4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Movement"",
                    ""id"": ""fceea42e-9b9d-4baf-89bb-b2376a5af30b"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""19bd4d46-299c-45e9-8aeb-0b373e116b94"",
                    ""path"": ""<XInputController>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b658a2a6-1375-4312-9d88-3f6a7b1115a2"",
                    ""path"": ""<XInputController>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9d098db9-dbb7-48ac-84d4-e353c47bd096"",
                    ""path"": ""<XInputController>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""72bb01dc-2c2c-488e-b02e-c1fe8310c675"",
                    ""path"": ""<XInputController>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Movement"",
                    ""id"": ""3acb2fe9-6d76-4b86-a74e-419fa9034b54"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""344bc3de-2798-4b34-9d4c-e40c31cfdc16"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""30b1264f-df8e-4cf5-b3d0-fcb691a9c764"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""98f4af51-a16f-4f55-a759-8b8da0522009"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""13368a6b-e296-4796-8549-af1fd917aeab"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2bb71b9a-7595-4a2f-b2c3-1f3792883956"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""546b4e39-f950-4841-8d66-32f2d0d4f544"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""161a8ee5-8de2-4d51-becb-45a8f73360da"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""beefb10c-6fcc-4342-a7a9-f9e0c648f70c"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Change"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01010d55-f06c-4074-9ad0-0f01f6189846"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Change"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d3849ba-ed7f-488a-9321-ef7c30b4e1c7"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Change"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de406622-a7b7-498e-9e1c-61574be67074"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Refresh"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0781004-77c8-4e86-85fb-cfb6800d9586"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player1Refresh"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9de9f2d8-d53b-44fa-be7d-4bee83d1bb75"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player2Refresh"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // playerMovement
        m_playerMovement = asset.FindActionMap("playerMovement", throwIfNotFound: true);
        m_playerMovement_Player1Movement = m_playerMovement.FindAction("Player1Movement", throwIfNotFound: true);
        m_playerMovement_Player2Movement = m_playerMovement.FindAction("Player2Movement", throwIfNotFound: true);
        m_playerMovement_Player1Confirm = m_playerMovement.FindAction("Player1Confirm", throwIfNotFound: true);
        m_playerMovement_Player2Confirm = m_playerMovement.FindAction("Player2Confirm", throwIfNotFound: true);
        m_playerMovement_Player1Change = m_playerMovement.FindAction("Player1Change", throwIfNotFound: true);
        m_playerMovement_Player2Change = m_playerMovement.FindAction("Player2Change", throwIfNotFound: true);
        m_playerMovement_Player1Refresh = m_playerMovement.FindAction("Player1Refresh", throwIfNotFound: true);
        m_playerMovement_Player2Refresh = m_playerMovement.FindAction("Player2Refresh", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // playerMovement
    private readonly InputActionMap m_playerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_playerMovement_Player1Movement;
    private readonly InputAction m_playerMovement_Player2Movement;
    private readonly InputAction m_playerMovement_Player1Confirm;
    private readonly InputAction m_playerMovement_Player2Confirm;
    private readonly InputAction m_playerMovement_Player1Change;
    private readonly InputAction m_playerMovement_Player2Change;
    private readonly InputAction m_playerMovement_Player1Refresh;
    private readonly InputAction m_playerMovement_Player2Refresh;
    public struct PlayerMovementActions
    {
        private @PlayerControllerActions m_Wrapper;
        public PlayerMovementActions(@PlayerControllerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Player1Movement => m_Wrapper.m_playerMovement_Player1Movement;
        public InputAction @Player2Movement => m_Wrapper.m_playerMovement_Player2Movement;
        public InputAction @Player1Confirm => m_Wrapper.m_playerMovement_Player1Confirm;
        public InputAction @Player2Confirm => m_Wrapper.m_playerMovement_Player2Confirm;
        public InputAction @Player1Change => m_Wrapper.m_playerMovement_Player1Change;
        public InputAction @Player2Change => m_Wrapper.m_playerMovement_Player2Change;
        public InputAction @Player1Refresh => m_Wrapper.m_playerMovement_Player1Refresh;
        public InputAction @Player2Refresh => m_Wrapper.m_playerMovement_Player2Refresh;
        public InputActionMap Get() { return m_Wrapper.m_playerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Player1Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Movement;
                @Player1Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Movement;
                @Player1Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Movement;
                @Player2Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Movement;
                @Player2Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Movement;
                @Player2Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Movement;
                @Player1Confirm.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Confirm;
                @Player1Confirm.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Confirm;
                @Player1Confirm.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Confirm;
                @Player2Confirm.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Confirm;
                @Player2Confirm.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Confirm;
                @Player2Confirm.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Confirm;
                @Player1Change.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Change;
                @Player1Change.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Change;
                @Player1Change.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Change;
                @Player2Change.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Change;
                @Player2Change.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Change;
                @Player2Change.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Change;
                @Player1Refresh.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Refresh;
                @Player1Refresh.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Refresh;
                @Player1Refresh.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Refresh;
                @Player2Refresh.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Refresh;
                @Player2Refresh.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Refresh;
                @Player2Refresh.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Refresh;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Player1Movement.started += instance.OnPlayer1Movement;
                @Player1Movement.performed += instance.OnPlayer1Movement;
                @Player1Movement.canceled += instance.OnPlayer1Movement;
                @Player2Movement.started += instance.OnPlayer2Movement;
                @Player2Movement.performed += instance.OnPlayer2Movement;
                @Player2Movement.canceled += instance.OnPlayer2Movement;
                @Player1Confirm.started += instance.OnPlayer1Confirm;
                @Player1Confirm.performed += instance.OnPlayer1Confirm;
                @Player1Confirm.canceled += instance.OnPlayer1Confirm;
                @Player2Confirm.started += instance.OnPlayer2Confirm;
                @Player2Confirm.performed += instance.OnPlayer2Confirm;
                @Player2Confirm.canceled += instance.OnPlayer2Confirm;
                @Player1Change.started += instance.OnPlayer1Change;
                @Player1Change.performed += instance.OnPlayer1Change;
                @Player1Change.canceled += instance.OnPlayer1Change;
                @Player2Change.started += instance.OnPlayer2Change;
                @Player2Change.performed += instance.OnPlayer2Change;
                @Player2Change.canceled += instance.OnPlayer2Change;
                @Player1Refresh.started += instance.OnPlayer1Refresh;
                @Player1Refresh.performed += instance.OnPlayer1Refresh;
                @Player1Refresh.canceled += instance.OnPlayer1Refresh;
                @Player2Refresh.started += instance.OnPlayer2Refresh;
                @Player2Refresh.performed += instance.OnPlayer2Refresh;
                @Player2Refresh.canceled += instance.OnPlayer2Refresh;
            }
        }
    }
    public PlayerMovementActions @playerMovement => new PlayerMovementActions(this);
    public interface IPlayerMovementActions
    {
        void OnPlayer1Movement(InputAction.CallbackContext context);
        void OnPlayer2Movement(InputAction.CallbackContext context);
        void OnPlayer1Confirm(InputAction.CallbackContext context);
        void OnPlayer2Confirm(InputAction.CallbackContext context);
        void OnPlayer1Change(InputAction.CallbackContext context);
        void OnPlayer2Change(InputAction.CallbackContext context);
        void OnPlayer1Refresh(InputAction.CallbackContext context);
        void OnPlayer2Refresh(InputAction.CallbackContext context);
    }
}
